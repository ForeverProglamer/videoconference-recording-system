CREATE TYPE "recording_status" AS ENUM (
  'scheduled',
  'in_progress',
  'finished'
);

CREATE TYPE "conferencing_platform" AS ENUM (
  'zoom',
  'google_meet'
);

CREATE TABLE IF NOT EXISTS "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "login" VARCHAR(50) UNIQUE NOT NULL,
  "password" VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS "sessions" (
  "user_id" INTEGER PRIMARY KEY,
  "token" VARCHAR UNIQUE NOT NULL,
  "expires_at" TIMESTAMPTZ NOT NULL,
  CONSTRAINT sessions_user_id_fk
    FOREIGN KEY(user_id)
      REFERENCES users(id)
      ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "conferences" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "title" VARCHAR(255) NOT NULL,
  "invite_link" VARCHAR NOT NULL,
  "start_time" TIMESTAMPTZ NOT NULL CHECK(start_time > NOW() - interval '5 minutes'),
  "end_time" TIMESTAMPTZ CHECK(end_time > start_time),
  "platform" conferencing_platform NOT NULL,
  CONSTRAINT conferences_user_id_fk
    FOREIGN KEY(user_id)
        REFERENCES users(id)
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "conference_settings" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "conference_id" integer NOT NULL,
  "participant_name" VARCHAR(100) NOT NULL,
  "disclaimer_message" VARCHAR NOT NULL,
  CONSTRAINT conference_settings_conference_id_fk
    FOREIGN KEY(conference_id)
        REFERENCES conferences(id)
        ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "recordings" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "conference_id" integer NOT NULL,
  "filename" VARCHAR UNIQUE NOT NULL,
  "status" recording_status NOT NULL,
  CONSTRAINT recordings_conference_id_fk
    FOREIGN KEY(conference_id)
        REFERENCES conferences(id)
        ON DELETE CASCADE
);
